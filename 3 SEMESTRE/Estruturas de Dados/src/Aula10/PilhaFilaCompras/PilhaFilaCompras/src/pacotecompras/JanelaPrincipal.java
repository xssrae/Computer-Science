package pacotecompras;

import java.util.Stack;
import javax.swing.JOptionPane;

public class JanelaPrincipal extends javax.swing.JFrame {
    //Pilha e fila globais:
    private Stack pilha = new Stack(); //classe pilha da Oracle
    private Queue fila = new Queue();
    
    /**
     * Creates new form JanelaPrincipal
     */
    public JanelaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compras - com pilha e fila");
        getContentPane().setLayout(null);

        jLabel1.setText("Nome comprador:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(34, 46, 140, 20);
        getContentPane().add(jTextField1);
        jTextField1.setBounds(180, 40, 120, 30);

        jLabel2.setText("Produto comprado:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(34, 84, 150, 20);
        getContentPane().add(jTextField2);
        jTextField2.setBounds(180, 80, 167, 30);

        jLabel3.setText("Preço do produto:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(34, 129, 140, 20);
        getContentPane().add(jTextField3);
        jTextField3.setBounds(180, 120, 68, 30);

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(480, 70, 90, 30);

        jButton2.setText("Cancelar última compra");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(420, 110, 210, 30);

        jButton3.setText("Transferir para a fila");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(100, 220, 210, 40);

        jButton4.setText("Atender");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(370, 220, 120, 40);

        setSize(new java.awt.Dimension(681, 385));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Lógica do botão Guardar, que guarda na pilha.
        //Devemos usar uma pilha, porque é uma estrutura de dados que nos
        //permite retirar o último item inserido.
        String nomecomprador = jTextField1.getText();
        String nomeproduto = jTextField2.getText();
        float precoproduto = Float.parseFloat(jTextField3.getText());
        Compra comp = new Compra(nomecomprador, nomeproduto, precoproduto);
        pilha.push(comp);
        //limpar os três campos:
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Botão Cancelar última compra, que retira o elemento no topo
        //da pilha (cancela a última compra que foi adicionada):
        if(pilha.isEmpty()) {            
            JOptionPane.showMessageDialog(this, 
                    "Impossível cancelar a última compra. A pilha está vazia!");
        }
        else {
           Compra compra = (Compra)pilha.pop();
           JOptionPane.showMessageDialog(this, "Cancelada a compra: \n" + compra.toString());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Botão Atender. Retira e mostra a primeira compra que se encontra na fila.
        if(fila.isEmpty()) {            
            JOptionPane.showMessageDialog(this, 
                    "Impossível atender. A fila está vazia!");
        }
        else {
           Compra compra = (Compra)fila.dequeue();
           JOptionPane.showMessageDialog(this, "Atendida a compra: \n" 
                   + compra.toString());
        }        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //Botão Transferir para a fila.
        //Necessitamos usar uma pilha auxiliar, para garantir que os elementos
        //na fila fiquem na ordem correta: os mais antigos primeiro.
        if(pilha.isEmpty()) {            
            JOptionPane.showMessageDialog(this, 
               "Impossível transferir da pilha para a fila, porque a pilha está vazia!");
        }
        else {
          Stack pilhaaux = new Stack();
          //ciclo para retirar tudo da pilha original e inserir na auxiliar,
          //para inverter a ordem:
          while(!pilha.isEmpty()) {
              pilhaaux.push(pilha.pop());
          }
          //esvaziar a fila:  
          while(!fila.isEmpty())fila.dequeue();
          //passamos as compras da pilha auxiliar para a fila:
          while(!pilhaaux.isEmpty()) {
              fila.enqueue(pilhaaux.pop());
          }   
          JOptionPane.showMessageDialog(this, "A pilha foi transferida para a fila");
        }        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
